{% from "_macros/patient-search.njk" import appPatientSearch with context %}
{% from "session/_navigation.njk" import sessionNavigation with context %}

{% extends "_layouts/form.njk" %}

{% set gridColumns = "full" %}
{% set hideConfirmButton = true %}
{% set title = session.location.name + " â€“ " + __("session." + view + ".title") %}

{% block beforeContent %}
  {{ breadcrumb({
    items: [{
      text: __("home.show.title"),
      href: "/"
    }, {
      text: __("session.list.title"),
      href: "/sessions"
    }, {
      text: session.location.name,
      href: "/sessions/" + session.id
    }]
  }) }}
{% endblock %}

{% block form %}
  {{ super() }}

  {{ sessionNavigation({
    session: session,
    view: view
  }) }}

  {% if (view == "register" or view == "record") and not session.isActive %}
    {{ appHeading({
      level: 2,
      size: "m",
      title: __("session." + view + ".title"),
      summary: __("session." + view + ".information") | safe
    }) }}
  {% else %}
    <div class="nhsuk-grid-row">
      <auto-submit class="app-grid-column-filters">
        {{ appPatientSearch({
          clear: session.uri + "/" + view,
          status: view if view != "record" and view != "consent",
          statuses: view if view == "consent"
        }) }}
      </auto-submit>

      <div class="app-grid-column-results">
        {{ warningCallout({
          heading: __("consent.list.title"),
          html: link(session.uri + "/consents", __n("consent.warning.text", session.consents.length), {
            classes: "nhsuk-link--no-visited-state"
          }) | nhsukMarkdown
        }) if session.consents.length }}

        {% if data[view] and data[view] != "none" and data[view] != Activity.Record %}
          {% set title = __("patientSession." + view + ".label") + ": " + data[view] %}
        {% else %}
          {% set title = __("session." + view + ".title") %}
        {% endif %}

        {{ appHeading({
          level: 3,
          size: "m",
          title: title | replace(",", " or "),
          summary: __mf("patient.results", {
            from: results.from,
            to: results.to,
            count: results.count
          }) | safe
        }) }}

        {% set instructHtml %}
          {{ __("session.instruct.description", session.patientsToInstruct.length) | nhsukMarkdown }}

          {{ actionLink({
            text: __("session.instructions.label"),
            href: session.uri + "/instructions"
          }) }}
        {% endset %}

        {{ insetText({
          html: instructHtml
        }) if view == "instruct" and (data.token.role == UserRole.NursePrescriber or data.token.role == UserRole.Pharmacist) and session.patientsToInstruct.length > 0 }}

        {% set recordHtml %}
          {{ vaccinationCount(data.token.vaccinations) | nhsukMarkdown if vaccinationCount(data.token.vaccinations) }}

          {% if defaultBatches.length %}
            {{ appHeading({
              classes: "nhsuk-u-margin-bottom-2",
              level: 4,
              size: "s",
              title: __mf("defaultBatch.title", {
                count: defaultBatches.length
              })
            }) }}

            {{ summaryList({
              rows: defaultBatchSummaryRows()
            }) }}
          {% endif %}
        {% endset %}

        {{ insetText({
          html: recordHtml
        }) if view == "record" and (defaultBatches.length or vaccinationCount(data.token.vaccinations)) }}

        {% for patientSession in results.page %}
          {% set statusHtml %}
            {% if view == "register" %}
              {{ patientSession.formatted.status.register | safe }}
            {% else %}
              {% set ids = data.programme_id or session.programme_ids %}
              {% for patientSession in patientSession.siblingPatientSessions %}
                {% if ids | includes(patientSession.programme_id) %}
                  {% if patientSession.formatted.status[view] %}
                    <p>{{ patientSession.formatted.status[view] | safe }}</p>
                  {% endif %}
                {% endif %}
              {% endfor %}
            {% endif %}
          {% endset %}

          {% set cardDescriptionHtml %}
            {{ summaryList({
              rows: summaryRows(patientSession.patient, {
                dob: {},
                yearGroup: {
                  value: patientSession.formatted.yearGroup
                },
                nextActivityPerProgramme: {
                  label: __("patientSession.nextActivityPerProgramme.label"),
                  value: patientSession.formatted.nextActivityPerProgramme
                } if (view == "register" and patientSession.register != RegistrationOutcome.Absent) or view == "record",
                vaccineMethod: {
                  label: __("patientSession.vaccineMethod.label"),
                  value: patientSession.formatted.vaccineMethod
                } if vaccineMethodItems,
                instruct: {
                  label: __("patientSession.instruct.label"),
                  value: patientSession.formatted.status.instruct
                } if patientSession.instruct and view != "instruct" and view != "consent",
                status: {
                  label: __("patientSession." + view + ".label"),
                  value: statusHtml,
                  href: (patientSession.uri + "/edit/registration?referrer=" + session.uri + "/" + view) if view == "register" and patientSession.register != RegistrationOutcome.Pending
                } if view != "record",
                notes: {
                  label: __("patientSession.notes.label"),
                  value: appEvent({
                    auditEvent: patientSession.latestNote,
                    showProgrammes: false,
                    truncate: 300,
                    patientSession: patientSession
                  })
                } if patientSession.latestNote
              })
            }) }}

            {{ appButtonGroup({
              buttons: [{
                classes: "nhsuk-button--secondary app-button--small",
                text: __("patientSession.registration.actions.present.label"),
                decorate: "patientSession.register",
                value: RegistrationOutcome.Present,
                attributes: {
                  "aria-label": __("patientSession.registration.actions.present.title", { patient: patientSession.patient }),
                  formaction: patientSession.uri + "/edit/registration?referrer=" + session.uri + "/" + view + "&register=" + data.register,
                  formmethod: "post"
                }
              }, {
                classes: "app-button--secondary-warning app-button--small",
                text: __("patientSession.registration.actions.absent.label"),
                decorate: "patientSession.register",
                value: RegistrationOutcome.Absent,
                attributes: {
                  "aria-label": __("patientSession.registration.actions.absent.title", { patient: patientSession.patient }),
                  formaction: patientSession.uri + "/edit/registration?referrer=" + session.uri + "/" + view + "&register=" + data.register,
                  formmethod: "post"
                }
              }]
            }) if view == "register" and patientSession.register == RegistrationOutcome.Pending }}
          {% endset %}

          {{ card({
            classes: "app-card--compact",
            heading: patientSession.patient.fullAndPreferredNames | highlightQuery(data.q),
            headingClasses: "nhsuk-heading-s",
            headingLevel: 4,
            clickable: true if view != "register",
            href: patientSession.uri + "?activity=" + view,
            descriptionHtml: cardDescriptionHtml
          }) }}
        {% endfor %}

        {{ govukPagination(pages) }}
      </div>
    </div>
  {% endif %}
{% endblock %}
