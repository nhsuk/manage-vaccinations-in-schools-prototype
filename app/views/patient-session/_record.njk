<hr class="nhsuk-section-break nhsuk-section-break--visible nhsuk-section-break--l">

{{ appHeading({
  classes: "app-vaccine-method",
  level: 3,
  size: "m",
  title: __("patientSession.record.titleWithMethod", {
    session: session,
    method: patientSession.vaccine.method | lower
  }),
  attributes: {
    "data-method": patientSession.vaccine.method
  }
} if patientSession.programme.alternativeVaccine else {
  level: 3,
  size: "m",
  title: __("patientSession.record.title", {
    session: session
  }),
  attributes: {
    id: "record"
  }
}) }}

{% set preScreenDescriptionHtml %}
  {{ radios({
    fieldset: {
      legend: {
        text: __("patientSession.preScreen.selfId.label", {
          patient: patient
        })
      }
    },
    items: [{
      text: __("patientSession.preScreen.selfId.true"),
      value: true
    }, {
      text: __("patientSession.preScreen.selfId.false"),
      value: false,
      conditional: {
        html: input({
          classes: "nhsuk-input--width-20",
          label: {
            text: __("patientSession.preScreen.identifiedBy.name.title")
          },
          decorate: "patientSession.preScreen.identifiedBy.name"
        }) + input({
          classes: "nhsuk-input--width-20",
          label: {
            text: __("patientSession.preScreen.identifiedBy.relationship.title")
          },
          hint: {
            text: __("patientSession.preScreen.identifiedBy.relationship.hint")
          },
          decorate: "patientSession.preScreen.identifiedBy.relationship"
        })
      }
    }],
    decorate: "patientSession.preScreen.selfId"
  }) }}

{% filter nhsukMarkdown %}
{{ __("patientSession.preScreen.description", { patient: patient }) }}
{% for question in patientSession.vaccine.preScreenQuestions %}
- {{ question }}
{%- endfor %}
{% endfilter %}

  {{ checkboxes({
    items: [{
      text: __("patientSession.preScreen.check.label")
    }],
    decorate: ["patientSession", "preScreen", "check"],
    _validate: {
      presence: {
        message: __("patientSession.preScreen.check.error")
      }
    }
  }) }}

  {{ textarea({
    label: { text: __("patientSession.preScreen.note.label") + " (optional)" },
    rows: 3,
    decorate: "patientSession.preScreen.note"
  }) }}

  {{ select({
    label: { text: __("patientSession.preScreen.suppliedBy.title") },
    items: userItems(data.users, patientSession.preScreen.suppliedBy),
    decorate: "patientSession.preScreen.suppliedBy_uid",
    attributes: {
      "data-module": "app-autocomplete"
    }
  }) if options.hasSupplier }}

  <hr class="nhsuk-section-break nhsuk-section-break--visible nhsuk-section-break--l">

  {% set vaccinationSiteHtml = radios({
    fieldset: {
      legend: { text: __("patientSession.preScreen.injectionSite.label") }
    },
    items: vaccinationSiteItems,
    decorate: "patientSession.preScreen.injectionSite",
    _validate: {
      conditional: {
        dependentOn: {
          name: "[patientSession][preScreen][ready]",
          value: true
        },
        message: __("patientSession.preScreen.injectionSite.error")
      }
    }
  }) %}

  {{ radios({
    fieldset: {
      legend: {
        classes: "nhsuk-fieldset__legend--m nhsuk-u-font-size-22",
        text: __("patientSession.preScreen.ready.label", {
          patient: patient,
          session: session,
          method: patientSession.vaccine.method | lower
        }) | safe
      }
    },
    items: [
      {
        text: __("patientSession.preScreen.ready.yes"),
        value: true,
        hint: {
          text: __("patientSession.preScreen.ready.hint")
        },
        conditional: {
          html: vaccinationSiteHtml
        } if patientSession.vaccine.method != VaccineMethod.Nasal
      },
      {
        text: __("patientSession.preScreen.ready.no"),
        value: false
      },
      {
        divider: "or"
      } if canRecordAlternativeVaccine,
      {
        text: __("patientSession.preScreen.ready.alternative"),
        value: "alternative",
        hint: {
          text: __("patientSession.preScreen.ready.hint")
        },
        conditional: {
          html: vaccinationSiteHtml
        }
      } if canRecordAlternativeVaccine
    ],
    decorate: "patientSession.preScreen.ready",
    _validate: {
      presence: {
        message: __("patientSession.preScreen.ready.error", {
          session: session
        })
      }
    }
  }) }}

  {{ button({
    text: __("patientSession.preScreen.confirm"),
    attributes: {
      formaction: patientSession.uri + "/new/pre-screen?referrer=" + referrer
    }
  }) }}
{% endset %}

{{ card({
  heading: __("patientSession.preScreen.label", {
    patient: patient
  }),
  headingClasses: "nhsuk-heading-m",
  headingLevel: 4,
  descriptionHtml: preScreenDescriptionHtml
}) }}
