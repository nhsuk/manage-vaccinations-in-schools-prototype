{% set isVaccinated = patientSession.report == PatientOutcome.Vaccinated %}

{{ heading({
  level: 3,
  size: "m",
  title: __("session.screen.label")
}) }}

{% set cardDescriptionHtml %}
  {# Description #}
  {% if not isVaccinated %}
    {{ patientSession.status.screen.description | nhsukMarkdown }}
  {% endif %}

  {# Actions #}
  {{ buttonGroup({
    buttons: [{
      classes: "nhsuk-button--secondary",
      text: __("triage.edit.title"),
      href: patientSession.uri + "/edit/triage?referrer=" + referrer
    }]
  }) if options.hasTriage and not isVaccinated }}

  {# Decision table #}
  {% set triageNoteRows = [] %}
  {% for triageNote in patientSession.triageNotes | reverse %}
    {% set triageNoteRows = triageNoteRows | push([
      {
        header: __("event.createdAt.label"),
        html: triageNote.link.createdAtAndBy
      },
      {
        header: __("event.note.label"),
        html: triageNote.note or "â€”" | nhsukMarkdown
      },
      {
        header: __("event.outcome.label"),
        html: triageNote.formatted.outcomeStatus
      }
    ]) %}
  {% endfor %}

  {% if options.hasTriage %}
    {{ table({
      id: "triage-notes",
      caption: __("triage.note.label"),
      sort: "createdAt",
      responsive: true,
      head: [
        {
          text: __("event.createdAt.label"),
          attributes: {
            width: "25%"
          }
        },
        { text: __("event.note.label") },
        {
          text: __("event.outcome.label"),
          attributes: {
            width: "25%"
          }
        }
      ],
      rows: triageNoteRows
    }) }}
  {% else %}
    <hr class="nhsuk-section-break nhsuk-section-break--visible nhsuk-section-break--l">

    {% set psdRadiosHtml = radios({
      classes: "nhsuk-radios--inline",
      fieldset: { legend: { text: __("triage.psd.label") } },
      items: booleanItems,
      decorate: "triage.psd"
    }) if permissions.canPrescribe %}

    {% set outcomeItems = injectConditionalHtml(triageOutcomeItems(patientSession.screenOutcomesForConsentMethod), ScreenOutcome.VaccinateNasal, psdRadiosHtml) if patientSession.programme.hasAlternativeVaccines else triageOutcomeItems(patientSession.screenOutcomesForConsentMethod) %}

    {{ radios({
      fieldset: {
        legend: {
          classes: "nhsuk-fieldset__legend--m nhsuk-u-font-size-22",
          text: __("triage.label", { patient: patient })
        }
      },
      hint: {
        text: patientSession.screenVaccinationMethod
      } if patientSession.screenVaccinationMethod,
      items: outcomeItems,
      decorate: "triage.outcome"
    }) }}

    {{ textarea({
      label: {
        text: __("triage.note.label") + " (optional)"
      },
      rows: 5,
      decorate: "triage.note"
    }) }}

    {{ button({
      text: __("triage.confirm"),
      attributes: {
        formaction: patientSession.uri + "/new/triage?referrer=" + referrer
      }
    }) }}
  {% endif %}
{% endset %}

{{ card({
  classes: "app-card--" + patientSession.status.screen.colour,
  feature: true,
  heading: programme.name + ": " + (patientSession.status.screen.text | lower),
  headingLevel: 4,
  descriptionHtml: cardDescriptionHtml
}) }}
