{% from "programme/_navigation.njk" import programmeNavigation with context %}

{% extends "_layouts/default.njk" %}

{% set isDataConsumer = account.role == UserRole.DataConsumer %}
{% set paths = { back: "/home" } if isDataConsumer %}
{% set title = programme.name + " â€“ " + __("programme.show.title") %}

{% block beforeContent %}
  {{ breadcrumb({
    items: [{
      text: __("home.show.title"),
      href: "/"
    }],
    text: __("programme.list.title"),
    href: "/programmes"
  }) if account.role != UserRole.DataConsumer }}
{% endblock %}

{% block content %}
  {{ super() }}

  {{ programmeNavigation({
    isDataConsumer: isDataConsumer,
    programme: programme,
    view: "show"
  }) }}

  <div class="nhsuk-grid-row nhsuk-card-group">
    <div class="nhsuk-grid-column-one-third nhsuk-card-group__item">
      {{ appDataCard({
        heading: PatientOutcome.NoOutcomeYet,
        headingLevel: 3,
        colour: "grey",
        data: programme.report(PatientOutcome.NoOutcomeYet).length
      }) }}
    </div>
    <div class="nhsuk-grid-column-one-third nhsuk-card-group__item">
      {{ appDataCard({
        heading: PatientOutcome.Vaccinated,
        headingLevel: 3,
        colour: "green",
        data: programme.report(PatientOutcome.Vaccinated).length
      }) }}
    </div>
    <div class="nhsuk-grid-column-one-third nhsuk-card-group__item">
      {{ appDataCard({
        heading: PatientOutcome.CouldNotVaccinate,
        headingLevel: 3,
        colour: "red",
        data: programme.report(PatientOutcome.CouldNotVaccinate).length
      }) }}
    </div>
  </div>

  {{ actionLink({
    text: __("download.new.label"),
    href: programme.uri + "/download/new"
  }) if programme.vaccinations.length }}

  {{ appHeading({
    level: 3,
    size: "m",
    title: __("programme.show.cohorts")
  }) }}

  <ul class="nhsuk-grid-row nhsuk-card-group">
    {% for yearGroup in programme.yearGroups %}
      <li class="nhsuk-grid-column-one-quarter nhsuk-card-group__item">
        {{ card({
          clickable: true if not isDataConsumer,
          heading: yearGroup | yearGroup,
          headingClasses: "nhsuk-heading-s",
          headingLevel: 4,
          href: programme.uri + "/patients?yearGroup=" + yearGroup if not isDataConsumer,
          descriptionHtml: __mf("patient.count", {
            count: programme.patientSessions | where("yearGroup", yearGroup) | length
          })
        }) }}
      </li>
    {% endfor %}
  </ul>

{% if programme.sessions.length %}
  {{ appHeading({
    level: 3,
    size: "m",
    title: __("programme.show.responses")
  }) }}

  <div class="nhsuk-grid-row nhsuk-card-group">
    <div class="nhsuk-grid-column-one-third nhsuk-card-group__item">
      {{ appDataCard({
        heading: "Consent requests sent",
        headingLevel: 4,
        data: 1671,
        meta: "including reminders"
      }) }}
    </div>

    <div class="nhsuk-grid-column-one-third nhsuk-card-group__item">
      {{ appDataCard({
        heading: "Consent given",
        headingLevel: 4,
        data: "78%",
        meta: "versus refused or no response"
      }) }}
    </div>

    <div class="nhsuk-grid-column-one-third nhsuk-card-group__item">
      {{ appDataCard({
        heading: "Responses received and triaged",
        headingLevel: 4,
        data: "98%"
      }) }}
    </div>
  </div>

  {{ table({
    heading: "Reasons for refusal",
    panel: true,
    head: [
      { text: __("reply.refusalReason.label") },
      { text: "Frequency", format: "numeric" }
    ],
    rows: [
      [
        { text: ReplyRefusal.Gelatine },
        { text: "11.1%", format: "numeric" }
      ] if programme.type == ProgrammeType.Flu,
      [
        { text: ReplyRefusal.AlreadyGiven },
        { text: "2.0%", format: "numeric" }
      ],
      [
        { text: ReplyRefusal.GettingElsewhere },
        { text: "3.6%", format: "numeric" }
      ],
      [
        { text: ReplyRefusal.Medical },
        { text: "1.0%", format: "numeric" }
      ],
      [
        { text: ReplyRefusal.Personal },
        { text: "5.1%", format: "numeric" }
      ],
      [
        { text: ReplyRefusal.Other },
        { text: "1.1%", format: "numeric" }
      ]
    ]
  }) }}

  {% set questionRows = [] %}
  {% for key, healthQuestion in programme.vaccines[0].flatHealthQuestions %}
    {% set questionRows = questionRows | push([
      {
        text: __("healthQuestions." + key + ".label")
      },
      {
        text: ["0.21","0.57","3.45","1.89"] | random + "%",
        format: "numeric"
      }
    ]) %}
  {% endfor %}
  {{ table({
    heading: "Consent journey",
    panel: true,
    head: [
      { text: "Question" },
      { html: "Dropout", format: "numeric" }
    ],
    rows: questionRows
  }) }}
{% endif %}
{% endblock %}
